---
openapi: 3.0.3
info:
  title: myapp
  version: 1.0.0
servers: []
paths:
  "/api/v1/sangakus/{id}":
    get:
      summary: show
      tags:
      - Api::V1::Sangaku
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 1000000
      responses:
        '200':
          description: return sangakus in json format
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          title:
                            type: string
                          description:
                            type: string
                          source:
                            type: string
                          difficulty:
                            type: string
                          inputs:
                            type: array
                            items: {}
                        required:
                        - title
                        - description
                        - source
                        - difficulty
                        - inputs
                      relationships:
                        type: object
                        properties:
                          user:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  type:
                                    type: string
                                required:
                                - id
                                - type
                            required:
                            - data
                          shrine:
                            type: object
                            properties:
                              data:
                                nullable: true
                            required:
                            - data
                        required:
                        - user
                        - shrine
                    required:
                    - id
                    - type
                    - attributes
                    - relationships
                required:
                - data
              example:
                data:
                  id: '599'
                  type: sangaku
                  attributes:
                    title: test_title
                    description: test_description
                    source: put 'Hello world'
                    difficulty: easy
                    inputs: []
                  relationships:
                    user:
                      data:
                        id: '908'
                        type: user
                    shrine:
                      data:
        '404':
          description: return 404
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - message
                - errors
              example:
                message: Record Not Found
                errors:
                - Couldn't find Sangaku with 'id'=1000000
  "/api/v1/shrines":
    get:
      summary: index
      tags:
      - Api::V1::Shrine
      parameters:
      - name: highLat
        in: query
        required: false
        schema:
          type: string
        example: '35.5'
      - name: highLng
        in: query
        required: false
        schema:
          type: string
        example: '135.2'
      - name: lat
        in: query
        required: false
        schema:
          type: string
        example: '35.4'
      - name: lng
        in: query
        required: false
        schema:
          type: string
        example: '135.2'
      - name: lowLat
        in: query
        required: false
        schema:
          type: string
        example: '35.4'
      - name: lowLng
        in: query
        required: false
        schema:
          type: string
        example: '135.1'
      - name: searchType
        in: query
        required: false
        schema:
          type: string
        example: List
      responses:
        '200':
          description: shrines does not create
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        type:
                          type: string
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                            address:
                              type: string
                            latitude:
                              type: number
                              format: float
                            longitude:
                              type: number
                              format: float
                            place_id:
                              type: string
                          required:
                          - name
                          - address
                          - latitude
                          - longitude
                          - place_id
                      required:
                      - id
                      - type
                      - attributes
                required:
                - data
              example:
                data:
                - id: '443'
                  type: shrine
                  attributes:
                    name: test_shrine
                    address: test_address
                    latitude: 35.70204829610801
                    longitude: 139.76789333814216
                    place_id: test_place_id_14
        '400':
          description: return 400
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - message
                - errors
              example:
                message: Bad Request
                errors:
                - invalid params
  "/api/v1/user/sangakus":
    get:
      summary: index
      tags:
      - Api::V1::User::Sangaku
      responses:
        '200':
          description: return search result in json format
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        type:
                          type: string
                        attributes:
                          type: object
                          properties:
                            title:
                              type: string
                            description:
                              type: string
                            source:
                              type: string
                            difficulty:
                              type: string
                            inputs:
                              type: array
                              items: {}
                          required:
                          - title
                          - description
                          - source
                          - difficulty
                          - inputs
                        relationships:
                          type: object
                          properties:
                            user:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                    type:
                                      type: string
                                  required:
                                  - id
                                  - type
                              required:
                              - data
                            shrine:
                              type: object
                              properties:
                                data:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                    type:
                                      type: string
                                  required:
                                  - id
                                  - type
                                  nullable: true
                              required:
                              - data
                          required:
                          - user
                          - shrine
                      required:
                      - id
                      - type
                      - attributes
                      - relationships
                required:
                - data
              example:
                data:
                - id: '611'
                  type: sangaku
                  attributes:
                    title: after_dedicate
                    description: test_description
                    source: put 'Hello world'
                    difficulty: easy
                    inputs: []
                  relationships:
                    user:
                      data:
                        id: '917'
                        type: user
                    shrine:
                      data:
      parameters:
      - name: shrine_id
        in: query
        required: false
        schema:
          type: string
        example: ''
      - name: title
        in: query
        required: false
        schema:
          type: string
        example: another
    post:
      summary: create
      tags:
      - Api::V1::User::Sangaku
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sangaku:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    source:
                      type: string
                    difficulty:
                      type: string
                  required:
                  - title
                  - description
                  - source
                  - difficulty
                fixed_inputs:
                  type: array
                  items:
                    type: string
              required:
              - sangaku
              - fixed_inputs
            example:
              sangaku:
                title: test_title
                description: test_description
                source: put 'Hello world'
                difficulty: easy
              fixed_inputs:
              - test_input_3
      responses:
        '200':
          description: success to create sangaku
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          title:
                            type: string
                          description:
                            type: string
                          source:
                            type: string
                          difficulty:
                            type: string
                          inputs:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                content:
                                  type: string
                              required:
                              - id
                              - content
                        required:
                        - title
                        - description
                        - source
                        - difficulty
                        - inputs
                      relationships:
                        type: object
                        properties:
                          user:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  type:
                                    type: string
                                required:
                                - id
                                - type
                            required:
                            - data
                          shrine:
                            type: object
                            properties:
                              data:
                                nullable: true
                            required:
                            - data
                        required:
                        - user
                        - shrine
                    required:
                    - id
                    - type
                    - attributes
                    - relationships
                required:
                - data
              example:
                data:
                  id: '612'
                  type: sangaku
                  attributes:
                    title: test_title
                    description: test_description
                    source: put 'Hello world'
                    difficulty: easy
                    inputs:
                    - id: 86
                      content: test_input_3
                  relationships:
                    user:
                      data:
                        id: '919'
                        type: user
                    shrine:
                      data:
  "/api/v1/user/sangakus/{id}":
    delete:
      summary: destroy
      tags:
      - Api::V1::User::Sangaku
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 617
      responses:
        '200':
          description: return sangaku in json format
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          title:
                            type: string
                          description:
                            type: string
                          source:
                            type: string
                          difficulty:
                            type: string
                          inputs:
                            type: array
                            items: {}
                        required:
                        - title
                        - description
                        - source
                        - difficulty
                        - inputs
                      relationships:
                        type: object
                        properties:
                          user:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  type:
                                    type: string
                                required:
                                - id
                                - type
                            required:
                            - data
                          shrine:
                            type: object
                            properties:
                              data:
                                nullable: true
                            required:
                            - data
                        required:
                        - user
                        - shrine
                    required:
                    - id
                    - type
                    - attributes
                    - relationships
                required:
                - data
              example:
                data:
                  id: '615'
                  type: sangaku
                  attributes:
                    title: test_title
                    description: test_description
                    source: put 'Hello world'
                    difficulty: easy
                    inputs: []
                  relationships:
                    user:
                      data:
                        id: '924'
                        type: user
                    shrine:
                      data:
        '404':
          description: return 404
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - message
                - errors
              example:
                message: Record Not Found
                errors:
                - Couldn't find Sangaku with 'id'=617 [WHERE "sangakus"."user_id"
                  = $1]
    patch:
      summary: update
      tags:
      - Api::V1::User::Sangaku
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 614
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sangaku:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    source:
                      type: string
                    difficulty:
                      type: string
                  required:
                  - title
                  - description
                  - source
                  - difficulty
                fixed_inputs:
                  type: array
                  items:
                    type: string
              required:
              - sangaku
              - fixed_inputs
            example:
              sangaku:
                title: changed_title
                description: test_description
                source: put 'Hello world'
                difficulty: easy
              fixed_inputs:
              - a
      responses:
        '200':
          description: success to update sangaku
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          title:
                            type: string
                          description:
                            type: string
                          source:
                            type: string
                          difficulty:
                            type: string
                          inputs:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                content:
                                  type: string
                              required:
                              - id
                              - content
                        required:
                        - title
                        - description
                        - source
                        - difficulty
                        - inputs
                      relationships:
                        type: object
                        properties:
                          user:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  type:
                                    type: string
                                required:
                                - id
                                - type
                            required:
                            - data
                          shrine:
                            type: object
                            properties:
                              data:
                                nullable: true
                            required:
                            - data
                        required:
                        - user
                        - shrine
                    required:
                    - id
                    - type
                    - attributes
                    - relationships
                required:
                - data
              example:
                data:
                  id: '613'
                  type: sangaku
                  attributes:
                    title: changed_title
                    description: test_description
                    source: put 'Hello world'
                    difficulty: easy
                    inputs:
                    - id: 87
                      content: a
                  relationships:
                    user:
                      data:
                        id: '920'
                        type: user
                    shrine:
                      data:
        '404':
          description: return 404
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - message
                - errors
              example:
                message: Record Not Found
                errors:
                - Couldn't find Sangaku with 'id'=614 [WHERE "sangakus"."user_id"
                  = $1]
  "/api/v1/user/sangakus/{sangaku_id}/dedicate":
    post:
      summary: create
      tags:
      - Api::V1::User::Dedicate
      parameters:
      - name: sangaku_id
        in: path
        required: true
        schema:
          type: integer
        example: 600
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shrine_id:
                  type: integer
                lat:
                  type: number
                  format: float
                lng:
                  type: number
                  format: float
              required:
              - shrine_id
              - lat
              - lng
            example:
              shrine_id: 444
              lat: 35.70204829610801
              lng: 139.76789333814216
      responses:
        '200':
          description: return sangaku in json format
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          title:
                            type: string
                          description:
                            type: string
                          source:
                            type: string
                          difficulty:
                            type: string
                          inputs:
                            type: array
                            items: {}
                        required:
                        - title
                        - description
                        - source
                        - difficulty
                        - inputs
                      relationships:
                        type: object
                        properties:
                          user:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  type:
                                    type: string
                                required:
                                - id
                                - type
                            required:
                            - data
                          shrine:
                            type: object
                            properties:
                              data:
                                type: object
                                properties:
                                  id:
                                    type: string
                                  type:
                                    type: string
                                required:
                                - id
                                - type
                            required:
                            - data
                        required:
                        - user
                        - shrine
                    required:
                    - id
                    - type
                    - attributes
                    - relationships
                required:
                - data
              example:
                data:
                  id: '600'
                  type: sangaku
                  attributes:
                    title: test_title
                    description: test_description
                    source: put 'Hello world'
                    difficulty: easy
                    inputs: []
                  relationships:
                    user:
                      data:
                        id: '910'
                        type: user
                    shrine:
                      data:
                        id: '444'
                        type: shrine
  "/api/v1/users":
    post:
      summary: create
      tags:
      - Api::V1::User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
              - token
            example:
              token: dummy_idtoken
      responses:
        '200':
          description: user does not create
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                      attributes:
                        type: object
                        properties:
                          provider:
                            type: string
                          uid:
                            type: string
                          name:
                            type: string
                          email:
                            type: string
                          nickname:
                            type: string
                        required:
                        - provider
                        - uid
                        - name
                        - email
                        - nickname
                    required:
                    - id
                    - type
                    - attributes
                required:
                - data
              example:
                data:
                  id: '929'
                  type: user
                  attributes:
                    provider: google
                    uid: ec868d8a-07b1-4dfd-b53b-dcca0fe4e4df
                    name: test user
                    email: user_46@example.com
                    nickname: test nickname
  "/up":
    get:
      summary: show
      tags:
      - Rails::Health
      responses:
        '200':
          description: works! (now write some real specs)
          content:
            text/html:
              schema:
                type: string
              example: '<!DOCTYPE html><html><body style="background-color: green"></body></html>'
